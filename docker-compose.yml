services:
  master_thesis_db:
    image: postgres:16.1
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: master_thesis
    volumes:
      - db-data:/var/lib/postgresql/data
    ports:
      - "5435:5432"
    container_name: master_thesis_db
    networks:
      - thesis_services_net

  consul:
    image: hashicorp/consul
    container_name: dev-consul
    ports:
      - "8500:8500"
    networks:
      - thesis_services_net

  kafka:
    image: bitnami/kafka:3.6
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_CFG_NODE_ID: 0
      KAFKA_CFG_PROCESS_ROLES: controller,broker
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: 0@kafka:9093
      KAFKA_CFG_LISTENERS: PLAINTEXT://:9092,CONTROLLER://:9093
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CFG_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_CFG_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      ALLOW_PLAINTEXT_LISTENER: yes
    networks:
      - thesis_services_net

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    ports:
      - "8085:8080"
    environment:
      DYNAMIC_CONFIG_ENABLED: true
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
    depends_on:
      - kafka
    networks:
      - thesis_services_net

  master_thesis_backend:
    depends_on:
      - master_thesis_db
      - kafka
    build:
      context: .
      dockerfile: Dockerfile
    restart: always
    container_name: master_thesis_backend
    ports:
      - "8084:8080"
    environment:
      SPRING_PROFILES_ACTIVE: prod
      SPRING_DATASOURCE_URL: jdbc:postgresql://master_thesis_db:5432/master_thesis
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: admin
      SPRING_DATASOURCE_SCHEMA: public
      OPTIMIZE_EVENT_CONSUMPTION: "false"
      spring.cloud.consul.host: "dev-consul"
      spring.cloud.discovery.discovery.hostname: "master_thesis_backend"
      spring.cloud.discovery.discovery.prefer-ip-address=false: "false"
    volumes:
      - dms-data:/opt/dms
    networks:
      - thesis_services_net

volumes:
  db-data:
  dms-data:
  es-data:

networks:
  thesis_services_net:
    name: thesis_services_net
    driver: bridge
